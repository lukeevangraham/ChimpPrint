{"version":3,"sources":["containers/Scrape/Scrape.js","components/SelectCampaigns/SelectCampaigns.js","components/Newsletter/Newsletter.js","components/SelectArticles/SelectArticles.js","App.js","index.js"],"names":["Scrape","onFormSubmit","useState","archiveURL","setArchiveUrl","scrapeArchive","e","a","preventDefault","axios","post","url","response","data","campaigns","getArchiveListForm","TextField","variant","onChange","target","value","sx","width","label","Button","onClick","style","maxWidth","marginTop","backgroundColor","borderRadius","padding","href","SelectCampaigns","changeCampaigns","setArticles","selectContent","campaignsToGet","filter","c","selected","issues","articles","flat","List","map","campaign","index","ListItem","disablePadding","ListItemButton","length","newCampaigns","handleToggle","ListItemIcon","Checkbox","edge","checked","tabIndex","disableRipple","ListItemText","headline","date","Font","register","family","fonts","src","fontWeight","styles","StyleSheet","create","page","title","fontFamily","fontSize","text","margin","lineHeight","textLast","image","height","marginBottom","footer","display","flexDirection","position","bottom","left","right","color","justifyContent","pageNumber","article","shortArticle","shortArticleText","marginRight","marginLeft","shortArticleImage","objectFit","objectPosition","paddingBottom","spacer","borderBottom","Newsletter","orgName","console","log","formatTitleAndText","minPresenceAhead","split","array","charAt","item","substring","size","fixed","flexGrow","flexBasis","textTransform","Date","toLocaleDateString","month","day","year","textAlign","letterSpacing","render","totalPages","SelectArticles","setOrgName","Array","keys","selectedArticles","setSelectedArticles","Box","gridTemplateColumns","gridColumn","listStyle","type","name","id","defaultChecked","sort","b","toggleArticleSelection","App","archive","setArchive","AppBar","mb","Toolbar","Typography","ReactDOM","document","querySelector"],"mappings":"oTAgFeA,EA3EA,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aAChB,EAAkCC,mBAAS,IAA3C,mBAAKC,EAAL,KAAiBC,EAAjB,KAEMC,EAAa,uCAAG,WAAOC,GAAP,eAAAC,EAAA,6DACpBD,EAAEE,iBADkB,SAGGC,IAAMC,KAAN,eAA2B,CAChDC,IAAKR,IAJa,OAGdS,EAHc,OAOpBX,EAAaW,EAASC,KAAKC,WAPP,2CAAH,sDAUbC,EACJ,qCACE,wFACA,cAACC,EAAA,EAAD,CACEC,QAAQ,WACRC,SAAU,SAACZ,GAAD,OAAOF,EAAcE,EAAEa,OAAOC,QACxCA,MAAOjB,EACPkB,GAAI,CAAEC,MAAO,OACbC,MAAM,mCAER,cAACC,EAAA,EAAD,CACEP,QAAQ,YACRQ,QAAS,SAACnB,EAAGH,GAAJ,OAAmBE,EAAcC,EAAGH,IAF/C,2BAMA,sBACEuB,MAAO,CACLC,SAAU,QACVC,UAAW,SACXC,gBAAiB,UACjBC,aAAc,MACdC,QAAS,QANb,UASE,wFACA,+BACE,0CACW,IACT,mBAAGC,KAAK,uBAAuBb,OAAO,SAAtC,0BAIF,wCACQ,6CAER,6FAC8D,IAC5D,8CAFF,OAE0B,4CAF1B,OAEgD,qCAFhD,kGAI0B,OAE1B,wCACQ,2CADR,OAGA,wGAEQ,4CAFR,2CAIA,mNAUR,OAAO,mCAAGJ,K,+DCZGkB,EAvDS,SAAC,GAAiD,IAA/CnB,EAA8C,EAA9CA,UAAWoB,EAAmC,EAAnCA,gBAAiBC,EAAkB,EAAlBA,YAC/CC,EAAa,uCAAG,WAAO9B,GAAP,iBAAAC,EAAA,6DACpBD,EAAEE,iBAEI6B,EAAiBvB,EAAUwB,QAAO,SAACC,GAAD,OAAOA,EAAEC,YAH7B,SAKG/B,IAAMC,KAAN,gCAA4C,CACjE+B,OAAQJ,IANU,cAKdzB,EALc,OAWpBuB,EAAYvB,EAASC,KAAK6B,SAASC,QAXf,kBAab/B,GAba,2CAAH,sDA2BnB,OACE,qCACE,cAACY,EAAA,EAAD,CAAQP,QAAQ,YAAYQ,QAASW,EAArC,4BAGA,cAACQ,EAAA,EAAD,UACG9B,EAAU+B,KAAI,SAACC,EAAUC,GAAX,OACb,cAACC,EAAA,EAAD,CAA6BC,gBAAc,EAA3C,SACE,eAACC,EAAA,EAAD,CAAgBzB,QAAS,kBAnBd,SAACsB,GACpB,GAAIjC,EAAUqC,OAAS,EAAG,CAExB,IAAMC,EAAetC,EAAU+B,KAAI,SAACN,GAAD,OACjCA,EAAE5B,MAAQoC,EAAV,2BAAuBR,GAAvB,IAA0BC,UAAWD,EAAEC,WAAaD,KAGtDL,EAAgBkB,IAYqBC,CAAaP,EAASnC,MAArD,UACE,cAAC2C,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CACEC,KAAK,QACLC,QAASX,EAASN,SAClBkB,UAAW,EACXC,eAAa,MAGjB,cAACC,EAAA,EAAD,UAAed,EAASe,WACxB,cAACD,EAAA,EAAD,CAAcJ,KAAK,MAAnB,SAA0BV,EAASgB,WAXxBhB,EAASnC,c,yBClClCoD,IAAKC,SAAS,CACZC,OAAQ,YACRC,MAAO,CACL,CACEC,IAAK,sEAEP,CACEA,IAAK,0FACLC,WAAY,KAEd,CACED,IAAK,0FACLC,WAAY,QAKlBL,IAAKC,SAAS,CACZC,OAAQ,QACRC,MAAO,CACL,CAAEC,IAAK,qEAKX,IAAME,EAASC,IAAWC,OAAO,CAC/BC,KAAM,CACJzC,QAAS,eAEX0C,MAAO,CACLC,WAAY,YACZC,SAAU,IAGZC,KAAM,CACJD,SAAU,GACVD,WAAY,QACZG,OAAQ,UACRC,WAAY,OAEdC,SAAU,CACRJ,SAAU,GACVD,WAAY,QACZG,OAAQ,IACRC,WAAY,OAEdE,MAAO,CACLrD,SAAU,MACVsD,OAAQ,OACRC,aAAc,GAEhBC,OAAQ,CACNC,QAAS,OACTC,cAAe,MACfC,SAAU,WACVX,SAAU,GACVY,OAAQ,GACRC,KAAM,EACNC,MAAO,EACPC,MAAO,OACPhB,WAAY,YACZiB,eAAgB,gBAChB5D,QAAS,OACT8C,OAAQ,QAGVe,WAAY,GAUZC,QAAS,GAKTC,aAAc,CACZT,cAAe,OAIjBU,iBAAkB,CAChBC,YAAa,IACbC,WAAY,GACZtB,SAAU,GACVD,WAAY,QACZI,WAAY,OAEdoB,kBAAmB,CACjB5E,MAAO,MACP2D,OAAQ,OAGRkB,UAAW,UACXC,eAAgB,QAChBC,cAAe,IAEjBC,OAAQ,CACNC,aAAc,eACdrB,aAAc,GACdmB,cAAe,MAuJJG,EAnJI,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,QAAS/D,EAAe,EAAfA,SAC7BqB,IAAKC,SAAS,CACZC,OAAQ,SACRE,IAAK,oEAGPuC,QAAQC,IAAI,0BAA2BjE,GAElBA,EAASJ,QAAO,SAACuD,GAAD,OAAaA,EAAQjB,KAAKzB,QAAU,OACnDT,EAASJ,QAAO,SAACuD,GAAD,OAAaA,EAAQjB,KAAKzB,OAAS,OADzE,IAKMyD,EAAqB,SAACf,GAAD,OACzB,eAAC,IAAD,WACE,cAAC,IAAD,CAAMgB,iBAAkB,GAAInF,MAAO2C,EAAOI,MAA1C,SACGoB,EAAQhC,SAAS,GAAGV,QAAU,IAAM,KAApC,UAA8C0C,EAAQhC,YAExDgC,EAAQjB,KAAKkC,MAAM,MAAMjE,KAAI,SAAC+B,EAAM7B,EAAOgE,GAAd,OAC5BhE,EAAQ,GAAK6B,EAAKzB,OAAS,EACN,OAAnByB,EAAKoC,OAAO,IATIC,EAUCrC,EAVQ,eAAC,IAAD,qBAAcqC,EAAKC,UAAU,OAWlDnE,IAAUgE,EAAM5D,OAAS,EAC3B,cAAC,IAAD,CAAMzB,MAAO2C,EAAOU,SAApB,SAA+BH,IAE/B,cAAC,IAAD,CAAMlD,MAAO2C,EAAOO,KAApB,SAA2BA,IAG/BA,EAAKzB,QAAU,IACb,cAAC,IAAD,CAAMzB,MAAO2C,EAAOO,KAApB,SAA2BA,IACzB,KAnBa,IAACqC,SAwBxB,OACE,cAAC,IAAD,UACE,eAAC,IAAD,CAAME,KAAK,SAASzF,MAAO2C,EAAOG,KAAlC,UACE,eAAC,IAAD,CACE4C,OAAK,EACL1F,MAAO,CACL6E,aAAc,gBACdc,SAAU,EACVjC,QAAS,OACTC,cAAe,MACfM,eAAgB,gBAChB2B,UAAW,OACXpC,aAAc,KACdnD,QAAS,IACT4C,SAAU,GACV9C,gBAAiB,UACjB0F,cAAe,YACf7C,WAAY,YACZN,WAAY,OAfhB,UAkBE,cAAC,IAAD,CAAM1C,MAAO,CAAE6F,cAAe,aAA9B,SAA8Cd,IAC9C,cAAC,IAAD,WACG,IAAIe,MAAOC,mBAAmB,QAAS,CACtCC,MAAO,OACPC,IAAK,UACLC,KAAM,iBAIZ,eAAC,IAAD,WACE,cAAC,IAAD,CACExD,WAAW,OACX1C,MAAO,CACLiD,SAAU,GACV/C,WAAY,GACZiG,UAAW,SACXC,cAAe,EACfpD,WAAY,YACZN,WAAY,IACZmC,aAAc,eACdrB,aAAc,IAVlB,wBAgBCxC,EAASG,KAAI,SAACgD,EAAS9C,GACtB,OAAI8C,EAAQb,MAAMb,IACZ0B,EAAQjB,KAAKzB,QAAU,IAEvB,cAAC,IAAD,CAAkBzB,MAAO2C,EAAOiC,OAAhC,SACE,eAAC,IAAD,CAAM5E,MAAO2C,EAAOyB,aAApB,UACE,cAAC,IAAD,CACEpE,MAAO2C,EAAO6B,kBACdW,iBAAkB,GAClB1C,IAAG,0CAAqC0B,EAAQb,MAAMb,OAExD,cAAC,IAAD,CAAMzC,MAAO2C,EAAO0B,iBAApB,SACGa,EAAmBf,SARf9C,GAgBX,cAAC,IAAD,CAAkBrB,MAAO2C,EAAOiC,OAAhC,SACE,eAAC,IAAD,CAAM5E,MAAO2C,EAAOwB,QAApB,UACE,cAAC,IAAD,CACEnE,MAAO2C,EAAOW,MACd6B,iBAAkB,EAClB1C,IAAG,0CAAqC0B,EAAQb,MAAMb,OAQvDyC,EAAmBf,OAbb9C,GAqBb,cAAC,IAAD,CAAkBrB,MAAO2C,EAAOiC,OAAhC,SACE,cAAC,IAAD,CAAM5E,MAAO2C,EAAOwB,QAApB,SACGe,EAAmBf,MAFb9C,SASnB,eAAC,IAAD,CAAMqE,OAAK,EAAC1F,MAAO2C,EAAOc,OAA1B,UACE,cAAC,IAAD,8BACA,cAAC,IAAD,CACEzD,MAAO2C,EAAOuB,WACdmC,OAAQ,gBAAGnC,EAAH,EAAGA,WAAYoC,EAAf,EAAeA,WAAf,gBACHpC,EADG,cACaoC,IAErBZ,OAAK,aCxKFa,EArFQ,SAAC,GAAkB,IAAhBvF,EAAe,EAAfA,SACxB,EAA4BxC,mBAAS,IAArC,mBAAKuG,EAAL,KAAcyB,EAAd,KACA,EAA8ChI,mBAAS,YAClDiI,MAAMzF,EAASS,QAAQiF,SAD5B,mBAAKC,EAAL,KAAuBC,EAAvB,KAoBA,OACE,mCACE,eAACC,EAAA,EAAD,CACElH,GAAI,CACF+D,QAAS,OACToD,oBAAqB,UACrBvD,OAAQ,SAJZ,UAOE,qBAAKvD,MAAO,CAAE+G,WAAY,QAAS1G,QAAS,QAA5C,SACE,cAAC,IAAD,CAAWT,MAAM,OAAO2D,OAAO,OAA/B,SACE,cAAC,EAAD,CAAYwB,QAASA,EAAS/D,SAAU2F,EAAiBxF,KAAI,SAAAgD,GAAO,OAAInD,EAASmD,YAQrF,sBAAKnE,MAAO,CAAE+G,WAAY,SAA1B,UACE,gCACE,0CACA,cAACzH,EAAA,EAAD,CACEO,MAAM,oBACNN,QAAQ,WACRG,MAAOqF,EACPvF,SAAU,SAACZ,GAAD,OAAO4H,EAAW5H,EAAEa,OAAOC,aAGzC,4CAEE,oBAAIM,MAAO,CAAEgH,UAAW,QAAxB,SACGhG,EAASG,KAAI,SAACgD,EAAS9C,GAAV,OACZ,6BACE,kCACE,uBACE4F,KAAK,WACLC,KAAM7F,EACN8F,GAAI9F,EACJ+F,gBAAc,EACd5H,SAAU,SAACZ,GAAD,OAxDC,SAACA,GAC1BA,EAAEa,OAAOsC,QAGX6E,EACE,sBAAID,GAAJ,CAAsB/H,EAAEa,OAAO0H,KAAIE,MAAK,SAACxI,EAAGyI,GAAJ,OAAUzI,EAAIyI,MAE9C1I,EAAEa,OAAOsC,SAGnB6E,EACED,EAAiB/F,QAAO,SAACuD,GAAD,OAAaA,GAAWvF,EAAEa,OAAO0H,OA6C1BI,CAAuB3I,MAEzCuF,EAAQhC,aATJd,oB,2BCjBVmG,EAjCH,WAGV,MAA4BhJ,mBAAS,IAArC,mBAAKiJ,EAAL,KAAcC,EAAd,KACA,EAA8BlJ,mBAAS,IAAvC,mBAAKwC,EAAL,KAAeP,EAAf,KAGA,OACE,qCACE,cAACkH,EAAA,EAAD,CAAQhI,GAAI,CAAEiI,GAAI,GAAKhE,SAAS,SAAhC,SACE,cAACiE,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAYvI,QAAQ,KAApB,4BAGJ,qBAAKS,MAAO,CAAEmD,OAAQ,YAAtB,SACGsE,EAAQhG,OACPT,EAASS,OACP,cAAC,EAAD,CAAgBT,SAAUA,IAE1B,cAAC,EAAD,CACE5B,UAAWqI,EACXjH,gBAAiBkH,EACjBjH,YAAaA,IAIjB,cAAC,EAAD,CAAQlC,aAAcmJ,U,OC/BhCK,IAAS1B,OAAO,cAAC,EAAD,IAAS2B,SAASC,cAAc,Y","file":"static/js/main.6b5f38ab.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport Button from \"@mui/material/Button\";\nimport axios from \"axios\";\n\nconst Scrape = ({ onFormSubmit }) => {\n  let [archiveURL, setArchiveUrl] = useState(\"\");\n\n  const scrapeArchive = async (e) => {\n    e.preventDefault();\n\n    const response = await axios.post(`/chimpScrape`, {\n      url: archiveURL,\n    });\n\n    onFormSubmit(response.data.campaigns);\n  };\n\n  const getArchiveListForm = (\n    <>\n      <div>Enter a MailChimp Campaign Archive URL to source from</div>\n      <TextField\n        variant=\"standard\"\n        onChange={(e) => setArchiveUrl(e.target.value)}\n        value={archiveURL}\n        sx={{ width: \"60%\" }}\n        label=\"MailChimp Campaign Archive URL\"\n      />\n      <Button\n        variant=\"contained\"\n        onClick={(e, archiveURL) => scrapeArchive(e, archiveURL)}\n      >\n        Select Issues\n      </Button>\n      <div\n        style={{\n          maxWidth: \"600px\",\n          marginTop: \"2.5rem\",\n          backgroundColor: \"#d3d3d3\",\n          borderRadius: \"7px\",\n          padding: \"1rem\",\n        }}\n      >\n        <div>To find your Campaign Archive URL follow these steps:</div>\n        <ol>\n          <li>\n            Log into{\" \"}\n            <a href=\"http://mailchimp.com\" target=\"_blank\">\n              Mailchimp\n            </a>\n          </li>\n          <li>\n            Click <i>Campaigns</i>\n          </li>\n          <li>\n            Next to (or under) your Campaign you'll see a button called{\" \"}\n            <i>Sent Campaign</i> or <i>View Report</i> or <i>Edit</i> (the\n            wording depends on the type of Campaign). Click the down arrow to\n            the right of the words.{\" \"}\n          </li>\n          <li>\n            Click <i>View email</i>.\n          </li>\n          <li>\n            You'll now see an email that was sent as part of your Campaign.\n            Click <i>Past Issues</i> which is near the top of the screen.\n          </li>\n          <li>\n            You are now seeing a list (archive) of sent Campaigns. The link to\n            the archive will be in your Internet Browser (e.g. Google Chrome,\n            Safari, Firefox, etc.) address bar.\n          </li>\n        </ol>\n      </div>\n    </>\n  );\n\n  return <>{getArchiveListForm}</>;\n};\n\nexport default Scrape;\n","import React from \"react\";\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemButton from \"@mui/material/ListItemButton\";\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport Button from \"@mui/material/Button\";\nimport axios from \"axios\";\n\nconst SelectCampaigns = ({ campaigns, changeCampaigns, setArticles }) => {\n  const selectContent = async (e) => {\n    e.preventDefault();\n\n    const campaignsToGet = campaigns.filter((c) => c.selected);\n\n    const response = await axios.post(`/chimpScrape/chimpPullContent`, {\n      issues: campaignsToGet,\n    });\n\n\n\n    setArticles(response.data.articles.flat());\n\n    return response;\n  };\n\n  const handleToggle = (index) => {\n    if (campaigns.length > 0) {\n      // console.log(\"VAL: \", campaigns[index].selected);\n      const newCampaigns = campaigns.map((c) =>\n        c.url === index ? { ...c, selected: !c.selected } : c\n      );\n\n      changeCampaigns(newCampaigns);\n    }\n  };\n\n  return (\n    <>\n      <Button variant=\"contained\" onClick={selectContent}>\n        Select Content\n      </Button>\n      <List>\n        {campaigns.map((campaign, index) => (\n          <ListItem key={campaign.url} disablePadding>\n            <ListItemButton onClick={() => handleToggle(campaign.url)}>\n              <ListItemIcon>\n                <Checkbox\n                  edge=\"start\"\n                  checked={campaign.selected}\n                  tabIndex={-1}\n                  disableRipple\n                />\n              </ListItemIcon>\n              <ListItemText>{campaign.headline}</ListItemText>\n              <ListItemText edge=\"end\">{campaign.date}</ListItemText>\n            </ListItemButton>\n          </ListItem>\n        ))}\n      </List>\n    </>\n  );\n};\n\nexport default SelectCampaigns;\n","import React from \"react\";\nimport {\n  Page,\n  Text,\n  View,\n  Document,\n  StyleSheet,\n  Image,\n  Font,\n} from \"@react-pdf/renderer\";\n\nFont.register({\n  family: \"Assistant\",\n  fonts: [\n    {\n      src: \"http://fonts.gstatic.com/s/assistant/v1/2iDwv6DBtyixlK5YHngp1w.ttf\",\n    },\n    {\n      src: \"http://fonts.gstatic.com/s/assistant/v1/xXstfiHQzjB9j5ZxYTBoZy3USBnSvpkopQaUR-2r7iU.ttf\",\n      fontWeight: 200,\n    },\n    {\n      src: \"http://fonts.gstatic.com/s/assistant/v1/xXstfiHQzjB9j5ZxYTBoZy3USBnSvpkopQaUR-2r7iU.ttf\",\n      fontWeight: 600,\n    },\n  ],\n});\n\nFont.register({\n  family: \"Cardo\",\n  fonts: [\n    { src: \"http://fonts.gstatic.com/s/cardo/v8/jbkF2_R0FKUEZTq5dwSknQ.ttf\" },\n    // { src: \"http://fonts.gstatic.com/s/assistant/v1/xXstfiHQzjB9j5ZxYTBoZy3USBnSvpkopQaUR-2r7iU.ttf\", fontWeight: 200 },\n  ],\n});\n\nconst styles = StyleSheet.create({\n  page: {\n    padding: \"20 20 55 20\",\n  },\n  title: {\n    fontFamily: \"Assistant\",\n    fontSize: 20,\n    // marginBottom: 7\n  },\n  text: {\n    fontSize: 12,\n    fontFamily: \"Cardo\",\n    margin: \"0 0 9 0\",\n    lineHeight: \"1.5\",\n  },\n  textLast: {\n    fontSize: 12,\n    fontFamily: \"Cardo\",\n    margin: \"0\",\n    lineHeight: \"1.5\",\n  },\n  image: {\n    maxWidth: \"50%\",\n    height: \"auto\",\n    marginBottom: 7,\n  },\n  footer: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    position: \"absolute\",\n    fontSize: 12,\n    bottom: 20,\n    left: 0,\n    right: 0,\n    color: \"grey\",\n    fontFamily: \"Assistant\",\n    justifyContent: \"space-between\",\n    padding: \"10 0\",\n    margin: \"0 20\",\n    // backgroundColor: \"#e8e8e8\",\n  },\n  pageNumber: {\n    // position: \"absolute\",\n    // fontSize: 12,\n    // bottom: 30,\n    // left: 0,\n    // right: 0,\n    // textAlign: \"center\",\n    // color: \"grey\",\n    // fontFamily: \"Assistant\",\n  },\n  article: {\n    // borderBottom: \"1 solid grey\",\n    // marginBottom: 10\n    // backgroundColor: \"red\"\n  },\n  shortArticle: {\n    flexDirection: \"row\",\n    // borderBottom: \"1 solid grey\",\n    // marginBottom: 10,\n  },\n  shortArticleText: {\n    marginRight: 185,\n    marginLeft: 10,\n    fontSize: 12,\n    fontFamily: \"Cardo\",\n    lineHeight: \"1.5\",\n  },\n  shortArticleImage: {\n    width: \"33%\",\n    height: \"auto\",\n    // flexGrow: \"0\",\n    // flexShrink : \"0\"\n    objectFit: \"contain\",\n    objectPosition: \"0% 0%\",\n    paddingBottom: 10,\n  },\n  spacer: {\n    borderBottom: \"1 solid grey\",\n    marginBottom: 10,\n    paddingBottom: 10,\n  },\n});\n\nconst Newsletter = ({ orgName, articles }) => {\n  Font.register({\n    family: \"Roboto\",\n    src: \"https://fonts.googleapis.com/css2?family=Assistant&display=swap\",\n  });\n\n  console.log(\"ARTICLES [Newsletter]: \", articles);\n\n  const longArticles = articles.filter((article) => article.text.length >= 400);\n  const shortArticles = articles.filter((article) => article.text.length > 400);\n\n  const formatListItem = (item) => <Text>&bull; {item.substring(1)}</Text>;\n\n  const formatTitleAndText = (article) => (\n    <View>\n      <Text minPresenceAhead={24} style={styles.title}>\n        {article.headline[0].length >= 100 ? null : `${article.headline}`}\n      </Text>\n      {article.text.split(\"\\n\").map((text, index, array) =>\n        index > 0 && text.length > 1 ? (\n          text.charAt(0) === \"\\t\" ? (\n            formatListItem(text)\n          ) : index === array.length - 1 ? (\n            <Text style={styles.textLast}>{text}</Text>\n          ) : (\n            <Text style={styles.text}>{text}</Text>\n          )\n        ) : // DON'T MAKE A BIG HEADING IF THE ARTICLE STARTS WITH A LONG SENTENCE\n        text.length >= 100 ? (\n          <Text style={styles.text}>{text}</Text>\n        ) : null\n      )}\n    </View>\n  );\n\n  return (\n    <Document>\n      <Page size=\"LETTER\" style={styles.page}>\n        <View\n          fixed\n          style={{\n            borderBottom: \"2 solid black\",\n            flexGrow: 0,\n            display: \"flex\",\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            flexBasis: \"100%\",\n            marginBottom: \"10\",\n            padding: \"8\",\n            fontSize: 11,\n            backgroundColor: \"#e8e8e8\",\n            textTransform: \"uppercase\",\n            fontFamily: \"Assistant\",\n            fontWeight: \"900\",\n          }}\n        >\n          <Text style={{ textTransform: \"uppercase\" }}>{orgName}</Text>\n          <Text>\n            {new Date().toLocaleDateString(\"en-US\", {\n              month: \"long\",\n              day: \"numeric\",\n              year: \"numeric\",\n            })}\n          </Text>\n        </View>\n        <View>\n          <Text\n            fontWeight=\"thin\"\n            style={{\n              fontSize: 50,\n              marginTop: -10,\n              textAlign: \"center\",\n              letterSpacing: 3,\n              fontFamily: \"Assistant\",\n              fontWeight: 200,\n              borderBottom: \"1 solid grey\",\n              marginBottom: 10,\n            }}\n          >\n            Newsletter\n          </Text>\n\n          {articles.map((article, index) => {\n            if (article.image.src) {\n              if (article.text.length <= 400) {\n                return (\n                  <View key={index} style={styles.spacer}>\n                    <View style={styles.shortArticle}>\n                      <Image\n                        style={styles.shortArticleImage}\n                        minPresenceAhead={80}\n                        src={`https://cors.grahamwebworks.com/${article.image.src}`}\n                      />\n                      <View style={styles.shortArticleText}>\n                        {formatTitleAndText(article)}\n                      </View>\n                    </View>\n                  </View>\n                );\n              } else {\n                // RENDER LONG TEXT ARTICLE\n                return (\n                  <View key={index} style={styles.spacer}>\n                    <View style={styles.article}>\n                      <Image\n                        style={styles.image}\n                        minPresenceAhead={1}\n                        src={`https://cors.grahamwebworks.com/${article.image.src}`}\n                      />\n                      {/* <Image\n                        style={styles.image}\n                        minPresenceAhead={1}\n                        src={`https://cors-anywhere.herokuapp.com/${article.image.src}`}\n                      /> */}\n                      {/* If headline is less than 100 words show it with heading */}\n                      {formatTitleAndText(article)}\n                    </View>\n                  </View>\n                );\n              }\n            } else {\n              // console.log(\"NO IMAGE!\");\n              return (\n                <View key={index} style={styles.spacer}>\n                  <View style={styles.article}>\n                    {formatTitleAndText(article)}\n                  </View>\n                </View>\n              );\n            }\n          })}\n        </View>\n        <View fixed style={styles.footer}>\n          <Text>rbcommunity.org</Text>\n          <Text\n            style={styles.pageNumber}\n            render={({ pageNumber, totalPages }) =>\n              `${pageNumber} / ${totalPages}`\n            }\n            fixed\n          ></Text>\n        </View>\n      </Page>\n    </Document>\n  );\n};\n\nexport default Newsletter;\n","import React, { useState } from \"react\";\nimport Box from \"@mui/material/Box\";\nimport { TextField } from \"@mui/material\";\nimport Newsletter from \"../Newsletter/Newsletter\";\nimport { PDFViewer } from \"@react-pdf/renderer\";\n\nconst SelectArticles = ({ articles }) => {\n  let [orgName, setOrgName] = useState(\"\");\n  let [selectedArticles, setSelectedArticles] = useState([\n    ...Array(articles.length).keys(),\n  ]);\n\n  const toggleArticleSelection = (e) => {\n    if (e.target.checked) {\n      // RETURNING AN ARTICLE'S INDEX TO 'SELECTED ARTICLES'\n\n      setSelectedArticles(\n        [...selectedArticles, e.target.id].sort((a, b) => a - b)\n      );\n    } else if (!e.target.checked) {\n      // REMOVING AN ARTICLE'S INDEX FROM 'SELECTED ARTICLES'\n\n      setSelectedArticles(\n        selectedArticles.filter((article) => article != e.target.id)\n      );\n    }\n  };\n\n  return (\n    <>\n      <Box\n        sx={{\n          display: \"grid\",\n          gridTemplateColumns: \"70% 1fr\",\n          height: \"100vh\",\n        }}\n      >\n        <div style={{ gridColumn: \"1 / 2\", padding: \"2rem\" }}>\n          <PDFViewer width=\"100%\" height=\"100%\">\n            <Newsletter orgName={orgName} articles={selectedArticles.map(article => articles[article])} />\n          </PDFViewer>\n          {/* News\n          <Box sx={{ display: \"grid\", gridTemplateRows: \"12px 35px 17px 1fr\" }}>\n            <div style={{ gridRow: \"1/2\" }}>{orgName}</div>\n            <div style={{ gridRow: \"2/3\" }}>Newsletter</div>\n          </Box> */}\n        </div>\n        <div style={{ gridColumn: \"2 / 3\" }}>\n          <div>\n            <div>Heading</div>\n            <TextField\n              label=\"Organization Name\"\n              variant=\"outlined\"\n              value={orgName}\n              onChange={(e) => setOrgName(e.target.value)}\n            />\n          </div>\n          <div>\n            Articles:\n            <ul style={{ listStyle: \"none\" }}>\n              {articles.map((article, index) => (\n                <li key={index}>\n                  <label>\n                    <input\n                      type=\"checkbox\"\n                      name={index}\n                      id={index}\n                      defaultChecked\n                      onChange={(e) => toggleArticleSelection(e)}\n                    />\n                    {article.headline}\n                  </label>\n                </li>\n              ))}\n            </ul>\n            {/* {articles[0].map((article, index) => (\n              <div key={index}>\n                {article.headline}\n              </div>\n            ))} */}\n          </div>\n        </div>\n        {/* {articles[0].map((article) => (\n        //   <div>{article.headline}</div>\n        <div dangerouslySetInnerHTML={{ __html: article.html }}></div>\n    ))} */}\n      </Box>\n    </>\n  );\n};\n\nexport default SelectArticles;\n","import React, { useState } from \"react\";\nimport Scrape from \"./containers/Scrape/Scrape\";\nimport SelectCampaigns from \"./components/SelectCampaigns/SelectCampaigns\";\nimport SelectArticles from \"./components/SelectArticles/SelectArticles\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Typography from \"@mui/material/Typography\";\n// import axios from \"axios\";\n// import cheerio from \"cheerio\";\n// import useChimpArchive from \"./hooks/useChimpArchive\";\n\nconst App = () => {\n  // let [archive, setArchive] = useState([]);\n  // let [archive, scrape] = useChimpArchive([]);\n  let [archive, setArchive] = useState([]);\n  let [articles, setArticles] = useState([]);\n\n\n  return (\n    <>\n      <AppBar sx={{ mb: 2 }} position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h6\">ChimpPrint</Typography>\n        </Toolbar>\n      </AppBar>\n      <div style={{ margin: \"0 2.5rem\" }}>\n        {archive.length ? (\n          articles.length ? (\n            <SelectArticles articles={articles} />\n          ) : (\n            <SelectCampaigns\n              campaigns={archive}\n              changeCampaigns={setArchive}\n              setArticles={setArticles}\n            />\n          )\n        ) : (\n          <Scrape onFormSubmit={setArchive} />\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nimport \"./index.css\"\n\nReactDOM.render(<App />, document.querySelector(\"#root\"));\n"],"sourceRoot":""}