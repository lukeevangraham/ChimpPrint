{"version":3,"sources":["components/Intro/Intro.module.scss","components/Intro/Intro.js","containers/Scrape/Scrape.js","components/SelectCampaigns/SelectCampaigns.js","components/Newsletter/Newsletter.js","components/SelectArticles/SelectArticles.js","App.js","index.js"],"names":["module","exports","Intro","className","classes","Header","Header__text","Typography","variant","style","marginBottom","width","height","src","title","frameBorder","allow","allowFullScreen","Scrape","onFormSubmit","useState","archiveURL","setArchiveUrl","scrapeArchive","e","preventDefault","axios","post","url","response","data","campaigns","getArchiveListForm","TextField","onChange","target","value","sx","label","Button","onClick","maxWidth","marginTop","backgroundColor","borderRadius","padding","List","listStyle","pl","fontFamily","ListItemText","display","rel","href","cursor","color","textDecoration","SelectCampaigns","changeCampaigns","setArticles","selectContent","campaignsToGet","filter","c","selected","issues","articles","flat","map","campaign","index","ListItem","disablePadding","ListItemButton","length","newCampaigns","handleToggle","ListItemIcon","Checkbox","edge","checked","tabIndex","disableRipple","headline","date","Font","register","family","fonts","fontWeight","styles","StyleSheet","create","page","fontSize","text","margin","lineHeight","textLast","textList","textListLast","image","footer","flexDirection","position","bottom","left","right","justifyContent","pageNumber","article","shortArticle","shortArticleText","marginRight","marginLeft","shortArticleImage","objectFit","objectPosition","paddingBottom","spacer","borderBottom","Newsletter","orgName","newsletterName","footerText","subheading","formatTitleAndText","minPresenceAhead","split","array","charAt","item","substring","formatListItem","size","fixed","flexGrow","flexBasis","textTransform","Date","toLocaleDateString","month","day","year","textAlign","letterSpacing","render","totalPages","SelectArticles","churchName","setChurchName","publicationTitle","setPublicationTitle","setFooterText","setSubheading","selectedArticles","setSelectedArticles","Box","gridTemplateColumns","gridColumn","type","name","id","sort","a","b","toggleArticleSelection","App","archive","setArchive","AppBar","mb","Toolbar","ReactDOM","document","querySelector"],"mappings":"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","file":"static/js/main.893e55cf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Intro_Header__3cY7r\",\"Header__text\":\"Intro_Header__text__3ed3M\"};","import { Typography } from \"@mui/material\";\n\nimport classes from \"./Intro.module.scss\";\n\nconst Intro = () => (\n  <div className={classes.Header}>\n    <div className={classes.Header__text}>\n      <Typography variant=\"h4\" style={{ marginBottom: \"1rem\" }}>\n        Turn your MailChimp campaigns into printable newsletters\n      </Typography>\n      <Typography>\n        Have a group of people who could benefit from a printed version of your\n        MailChimp emails? This site cooks up printouts that look way better than\n        just hitting \"print\" in a email.\n      </Typography>\n    </div>\n    <iframe\n      width=\"560\"\n      height=\"315\"\n      src=\"https://www.youtube.com/embed/C6vcWL1eXMI?si=5h-iQ3p6HZGmc3zf\"\n      title=\"YouTube video player\"\n      frameBorder=\"0\"\n      allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture;\"\n      allowFullScreen\n    ></iframe>\n  </div>\n);\n\nexport default Intro;\n","import React, { useState } from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport Button from \"@mui/material/Button\";\nimport axios from \"axios\";\nimport Intro from \"../../components/Intro/Intro\";\nimport { Typography, List, ListItemText } from \"@mui/material\";\n\nconst Scrape = ({ onFormSubmit }) => {\n  let [archiveURL, setArchiveUrl] = useState(\"\");\n\n  const scrapeArchive = async (e) => {\n    e.preventDefault();\n\n    const response = await axios.post(`/chimpScrape`, {\n      url: archiveURL,\n    });\n\n    onFormSubmit(response.data.campaigns);\n  };\n\n  const getArchiveListForm = (\n    <>\n      <Typography style={{ marginBottom: \"0rem\" }}>\n        Enter a MailChimp Campaign Archive URL to source from:\n      </Typography>\n      <TextField\n        variant=\"standard\"\n        onChange={(e) => setArchiveUrl(e.target.value)}\n        value={archiveURL}\n        sx={{ width: \"60%\" }}\n        label=\"MailChimp Campaign Archive URL\"\n      />\n      <Button\n        variant=\"contained\"\n        onClick={(e, archiveURL) => scrapeArchive(e, archiveURL)}\n      >\n        Select Issues\n      </Button>\n      <div\n        style={{\n          maxWidth: \"600px\",\n          marginTop: \"3rem\",\n          backgroundColor: \"#d3d3d3\",\n          borderRadius: \"7px\",\n          padding: \"1rem\",\n        }}\n      >\n        <Typography>\n          To find your Campaign Archive URL follow these steps:\n        </Typography>\n        <List sx={{ listStyle: \"decimal\", pl: 4, fontFamily: \"sans-serif\" }}>\n          <ListItemText sx={{ display: \"list-item\" }}>\n            Log into{\" \"}\n            <a rel=\"noreferrer\" href=\"http://mailchimp.com\" target=\"_blank\">\n              Mailchimp\n            </a>\n          </ListItemText>\n          <ListItemText sx={{ display: \"list-item\" }}>\n            Click <i>Campaigns</i>\n          </ListItemText>\n          <ListItemText sx={{ display: \"list-item\" }}>\n            Next to (or under) your Campaign you'll see a button called{\" \"}\n            <i>Sent Campaign</i> or <i>View Report</i> or <i>Edit</i> (the\n            wording depends on the type of Campaign). Click the down arrow to\n            the right of the words.{\" \"}\n          </ListItemText>\n          <ListItemText sx={{ display: \"list-item\" }}>\n            Click <i>View email</i>.\n          </ListItemText>\n          <ListItemText sx={{ display: \"list-item\" }}>\n            You'll now see an email that was sent as part of your Campaign.\n            Click <i>Past Issues</i> which is near the top of the screen.\n          </ListItemText>\n          <ListItemText sx={{ display: \"list-item\" }}>\n            You are now seeing a list (archive) of sent Campaigns. The link to\n            the archive will be in your Internet Browser (e.g. Google Chrome,\n            Safari, Firefox, etc.) address bar.\n          </ListItemText>\n        </List>\n      </div>\n      <Typography\n        onClick={() =>\n          setArchiveUrl(\n            \"https://us11.campaign-archive.com/home/?u=16a7d00c97055ae7a7fe916ec&id=952a98efb9\"\n          )\n        }\n        style={{ marginTop: \"2rem\", cursor: \"pointer\", color: \"blue\", textDecoration: \"underline\", marginBottom: \"2rem\" }}\n      >\n        Want a sample url? Click here\n      </Typography>\n    </>\n  );\n\n  return (\n    <>\n      <Intro />\n      {getArchiveListForm}\n    </>\n  );\n};\n\nexport default Scrape;\n","import React from \"react\";\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemButton from \"@mui/material/ListItemButton\";\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport Button from \"@mui/material/Button\";\nimport axios from \"axios\";\n\nconst SelectCampaigns = ({ campaigns, changeCampaigns, setArticles }) => {\n  const selectContent = async (e) => {\n    e.preventDefault();\n\n    const campaignsToGet = campaigns.filter((c) => c.selected);\n\n    const response = await axios.post(`/chimpScrape/chimpPullContent`, {\n      issues: campaignsToGet,\n    });\n\n\n\n    setArticles(response.data.articles.flat());\n\n    return response;\n  };\n\n  const handleToggle = (index) => {\n    if (campaigns.length > 0) {\n      // console.log(\"VAL: \", campaigns[index].selected);\n      const newCampaigns = campaigns.map((c) =>\n        c.url === index ? { ...c, selected: !c.selected } : c\n      );\n\n      changeCampaigns(newCampaigns);\n    }\n  };\n\n  return (\n    <>\n      <Button variant=\"contained\" onClick={selectContent}>\n        Select Content\n      </Button>\n      <List>\n        {campaigns.map((campaign, index) => (\n          <ListItem key={campaign.url} disablePadding>\n            <ListItemButton onClick={() => handleToggle(campaign.url)}>\n              <ListItemIcon>\n                <Checkbox\n                  edge=\"start\"\n                  checked={campaign.selected}\n                  tabIndex={-1}\n                  disableRipple\n                />\n              </ListItemIcon>\n              <ListItemText>{campaign.headline}</ListItemText>\n              <ListItemText edge=\"end\">{campaign.date}</ListItemText>\n            </ListItemButton>\n          </ListItem>\n        ))}\n      </List>\n    </>\n  );\n};\n\nexport default SelectCampaigns;\n","import React from \"react\";\nimport {\n  Page,\n  Text,\n  View,\n  Document,\n  StyleSheet,\n  Image,\n  Font,\n} from \"@react-pdf/renderer\";\n\nFont.register({\n  family: \"Assistant\",\n  fonts: [\n    {\n      src: \"https://fonts.gstatic.com/s/assistant/v1/2iDwv6DBtyixlK5YHngp1w.ttf\",\n    },\n    {\n      src: \"https://fonts.gstatic.com/s/assistant/v1/xXstfiHQzjB9j5ZxYTBoZy3USBnSvpkopQaUR-2r7iU.ttf\",\n      fontWeight: 200,\n    },\n    {\n      src: \"https://fonts.gstatic.com/s/assistant/v1/xXstfiHQzjB9j5ZxYTBoZy3USBnSvpkopQaUR-2r7iU.ttf\",\n      fontWeight: 600,\n    },\n  ],\n});\n\nFont.register({\n  family: \"Cardo\",\n  fonts: [\n    { src: \"https://fonts.gstatic.com/s/cardo/v8/jbkF2_R0FKUEZTq5dwSknQ.ttf\" },\n    // { src: \"http://fonts.gstatic.com/s/assistant/v1/xXstfiHQzjB9j5ZxYTBoZy3USBnSvpkopQaUR-2r7iU.ttf\", fontWeight: 200 },\n  ],\n});\n\nconst styles = StyleSheet.create({\n  page: {\n    padding: \"20 20 55 20\",\n  },\n  title: {\n    fontFamily: \"Assistant\",\n    fontSize: 20,\n    // marginBottom: 7\n  },\n  text: {\n    fontSize: 12,\n    fontFamily: \"Cardo\",\n    margin: \"0 0 9 0\",\n    lineHeight: \"1.5\",\n  },\n  textLast: {\n    fontSize: 12,\n    fontFamily: \"Cardo\",\n    margin: \"0\",\n    lineHeight: \"1.5\",\n  },\n  textList: {\n    fontSize: 12,\n    fontFamily: \"Cardo\",\n    margin: \"0 0 0 10\",\n    // lineHeight: \"1.5\",\n  },\n  textListLast: {\n    fontSize: 12,\n    fontFamily: \"Cardo\",\n    margin: \"0 0 9 10\",\n  },\n  image: {\n    maxWidth: \"50%\",\n    height: \"auto\",\n    marginBottom: 7,\n  },\n  footer: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    position: \"absolute\",\n    fontSize: 12,\n    bottom: 20,\n    left: 0,\n    right: 0,\n    color: \"grey\",\n    fontFamily: \"Assistant\",\n    justifyContent: \"space-between\",\n    padding: \"10 0\",\n    margin: \"0 20\",\n    // backgroundColor: \"#e8e8e8\",\n  },\n  pageNumber: {\n    // position: \"absolute\",\n    // fontSize: 12,\n    // bottom: 30,\n    // left: 0,\n    // right: 0,\n    // textAlign: \"center\",\n    // color: \"grey\",\n    // fontFamily: \"Assistant\",\n  },\n  article: {\n    // borderBottom: \"1 solid grey\",\n    // marginBottom: 10\n    // backgroundColor: \"red\"\n  },\n  shortArticle: {\n    flexDirection: \"row\",\n    // borderBottom: \"1 solid grey\",\n    // marginBottom: 10,\n  },\n  shortArticleText: {\n    marginRight: 185,\n    marginLeft: 10,\n    fontSize: 12,\n    fontFamily: \"Cardo\",\n    lineHeight: \"1.5\",\n  },\n  shortArticleImage: {\n    width: \"33%\",\n    height: \"auto\",\n    // flexGrow: \"0\",\n    // flexShrink : \"0\"\n    objectFit: \"contain\",\n    objectPosition: \"0% 0%\",\n    paddingBottom: 10,\n  },\n  spacer: {\n    borderBottom: \"1 solid grey\",\n    marginBottom: 10,\n    paddingBottom: 10,\n  },\n});\n\nconst Newsletter = ({\n  orgName,\n  newsletterName,\n  footerText,\n  subheading,\n  articles,\n}) => {\n  Font.register({\n    family: \"Roboto\",\n    src: \"https://fonts.googleapis.com/css2?family=Assistant&display=swap\",\n  });\n\n  // console.log(\"ARTICLES [Newsletter]: \", articles);\n\n  // const longArticles = articles.filter((article) => article.text.length >= 400);\n  // const shortArticles = articles.filter((article) => article.text.length > 400);\n\n  const formatListItem = (item, index, array) => {\n// THE LAST LIST ITEM NEEDS SPACING BELOW, HENCE THE CONDITIONAL\n    if (array[index + 1].charAt(0) === \"\\t\") {\n      return (\n        <Text key={index} style={styles.textList}>\n          &bull; {item.substring(1)}\n        </Text>\n      );\n    } else {\n      return (\n        <Text key={index} style={styles.textListLast}>\n          &bull; {item.substring(1)}\n        </Text>\n      );\n    }\n  };\n\n  const formatTitleAndText = (article) => (\n    <View>\n      <Text minPresenceAhead={24} style={styles.title}>\n        {article.headline[0].length >= 100 ? null : `${article.headline}`}\n      </Text>\n      {article.text.split(\"\\n\").map((text, index, array) =>\n        index > 0 && text.length > 1 ? (\n          text.charAt(0) === \"\\t\" ? (\n            formatListItem(text, index, array)\n          ) : index === array.length - 1 ? (\n            <Text key={index} style={styles.textLast}>\n              {text}\n            </Text>\n          ) : (\n            <Text key={index} style={styles.text}>\n              {text}\n            </Text>\n          )\n        ) : // DON'T MAKE A BIG HEADING IF THE ARTICLE STARTS WITH A LONG SENTENCE\n        text.length >= 100 ? (\n          <Text key={index} style={styles.text}>\n            {text}\n          </Text>\n        ) : null\n      )}\n    </View>\n  );\n\n  return (\n    <Document>\n      <Page size=\"LETTER\" style={styles.page}>\n        <View\n          fixed\n          style={{\n            borderBottom: \"2 solid black\",\n            flexGrow: 0,\n            display: \"flex\",\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            flexBasis: \"100%\",\n            marginBottom: \"10\",\n            padding: \"8\",\n            fontSize: 11,\n            backgroundColor: \"#e8e8e8\",\n            textTransform: \"uppercase\",\n            fontFamily: \"Assistant\",\n            fontWeight: \"900\",\n          }}\n        >\n          <Text style={{ textTransform: \"uppercase\" }}>{orgName}</Text>\n          <Text>\n            {new Date().toLocaleDateString(\"en-US\", {\n              month: \"long\",\n              day: \"numeric\",\n              year: \"numeric\",\n            })}\n          </Text>\n        </View>\n        <View>\n          <Text\n            fontWeight=\"thin\"\n            style={{\n              fontSize: 50,\n              marginTop: -10,\n              textAlign: \"center\",\n              letterSpacing: 3,\n              fontFamily: \"Assistant\",\n              fontWeight: 200,\n              borderBottom: \"1 solid grey\",\n              // marginBottom: 10,\n            }}\n          >\n            {newsletterName}\n          </Text>\n          {subheading ? (\n            <Text\n              fontWeight=\"thin\"\n              style={{\n                fontSize: 12,\n                padding: \"3 0\",\n                textAlign: \"center\",\n                letterSpacing: 3,\n                fontFamily: \"Assistant\",\n                fontWeight: 900,\n                borderBottom: \"1 solid grey\",\n                // marginBottom: 10,\n              }}\n            >\n              {subheading}\n            </Text>\n          ) : null}\n\n          <View style={{ margin: \"5px 0\" }}></View>\n\n          {articles.map((article, index) => {\n            if (article.image.src) {\n              if (article.text.length <= 400) {\n                return (\n                  <View key={index} style={styles.spacer}>\n                    <View style={styles.shortArticle}>\n                      <Image\n                        style={styles.shortArticleImage}\n                        minPresenceAhead={80}\n                        src={`https://cors.grahamwebworks.com/${article.image.src}`}\n                      />\n                      <View style={styles.shortArticleText}>\n                        {formatTitleAndText(article)}\n                      </View>\n                    </View>\n                  </View>\n                );\n              } else {\n                // RENDER LONG TEXT ARTICLE\n                return (\n                  <View key={index} style={styles.spacer}>\n                    <View style={styles.article}>\n                      <Image\n                        style={styles.image}\n                        minPresenceAhead={1}\n                        src={`https://cors.grahamwebworks.com/${article.image.src}`}\n                      />\n                      {/* <Image\n                        style={styles.image}\n                        minPresenceAhead={1}\n                        src={`https://cors-anywhere.herokuapp.com/${article.image.src}`}\n                      /> */}\n                      {/* If headline is less than 100 words show it with heading */}\n                      {formatTitleAndText(article)}\n                    </View>\n                  </View>\n                );\n              }\n            } else {\n              // console.log(\"NO IMAGE!\");\n              return (\n                <View key={index} style={styles.spacer}>\n                  <View style={styles.article}>\n                    {formatTitleAndText(article)}\n                  </View>\n                </View>\n              );\n            }\n          })}\n        </View>\n        <View fixed style={styles.footer}>\n          <Text>{footerText}</Text>\n          <Text\n            style={styles.pageNumber}\n            render={({ pageNumber, totalPages }) =>\n              `${pageNumber} / ${totalPages}`\n            }\n            fixed\n          ></Text>\n        </View>\n      </Page>\n    </Document>\n  );\n};\n\nexport default Newsletter;\n","import React, { useState } from \"react\";\nimport Box from \"@mui/material/Box\";\nimport { TextField } from \"@mui/material\";\nimport Newsletter from \"../Newsletter/Newsletter\";\nimport { PDFViewer } from \"@react-pdf/renderer\";\n\nconst SelectArticles = ({ articles }) => {\n  let [churchName, setChurchName] = useState(\"RB Community Church\");\n  let [publicationTitle, setPublicationTitle] = useState(\"Life of the Church\");\n  let [footerText, setFooterText] = useState(\"rbcommunity.org\");\n  let [subheading, setSubheading] = useState(\"If you've complained about not knowing what's going on...here you go\");\n  let [selectedArticles, setSelectedArticles] = useState([\n  ]);\n\n  const toggleArticleSelection = (e) => {\n    if (e.target.checked) {\n      // RETURNING AN ARTICLE'S INDEX TO 'SELECTED ARTICLES'\n\n      setSelectedArticles(\n        [...selectedArticles, e.target.id].sort((a, b) => a - b)\n      );\n    } else if (!e.target.checked) {\n      // REMOVING AN ARTICLE'S INDEX FROM 'SELECTED ARTICLES'\n\n      setSelectedArticles(\n        selectedArticles.filter((article) => article !== e.target.id)\n      );\n    }\n  };\n\n  return (\n    <>\n      <Box\n        sx={{\n          display: \"grid\",\n          gridTemplateColumns: \"70% 1fr\",\n          height: \"100vh\",\n        }}\n      >\n        <div style={{ gridColumn: \"1 / 2\", padding: \"2rem\" }}>\n          <PDFViewer width=\"100%\" height=\"100%\">\n            <Newsletter\n              orgName={churchName}\n              newsletterName={publicationTitle}\n              footerText={footerText}\n              subheading={subheading}\n              articles={selectedArticles.map((article) => articles[article])}\n            />\n          </PDFViewer>\n          {/* News\n          <Box sx={{ display: \"grid\", gridTemplateRows: \"12px 35px 17px 1fr\" }}>\n            <div style={{ gridRow: \"1/2\" }}>{orgName}</div>\n            <div style={{ gridRow: \"2/3\" }}>Newsletter</div>\n          </Box> */}\n        </div>\n        <div style={{ gridColumn: \"2 / 3\" }}>\n          <div>\n            <TextField\n              label=\"Church Name\"\n              variant=\"outlined\"\n              value={churchName}\n              sx={{ width: \"100%\", marginTop: \"2rem\" }}\n              onChange={(e) => setChurchName(e.target.value)}\n            />\n            <TextField\n              label=\"Publication Title\"\n              variant=\"outlined\"\n              value={publicationTitle}\n              sx={{ width: \"100%\", marginTop: \"1rem\" }}\n              onChange={(e) => setPublicationTitle(e.target.value)}\n            />\n            <TextField\n              label=\"Subheading\"\n              variant=\"outlined\"\n              value={subheading}\n              sx={{ width: \"100%\", marginTop: \"1rem\" }}\n              onChange={(e) => setSubheading(e.target.value)}\n            />\n            <TextField\n              label=\"Footer Text\"\n              variant=\"outlined\"\n              value={footerText}\n              sx={{ width: \"100%\", marginTop: \"1rem\" }}\n              onChange={(e) => setFooterText(e.target.value)}\n            />\n          </div>\n          <div style={{ marginTop: \"2rem\" }}>\n            Select articles to add:\n            <ul style={{ listStyle: \"none\" }}>\n              {articles.map((article, index) => (\n                <li key={index}>\n                  <label>\n                    <input\n                      type=\"checkbox\"\n                      name={index}\n                      id={index}\n                      onChange={(e) => toggleArticleSelection(e)}\n                    />\n                    {article.headline}\n                  </label>\n                </li>\n              ))}\n            </ul>\n            {/* {articles[0].map((article, index) => (\n              <div key={index}>\n                {article.headline}\n              </div>\n            ))} */}\n          </div>\n        </div>\n        {/* {articles[0].map((article) => (\n        //   <div>{article.headline}</div>\n        <div dangerouslySetInnerHTML={{ __html: article.html }}></div>\n    ))} */}\n      </Box>\n    </>\n  );\n};\n\nexport default SelectArticles;\n","import React, { useState } from \"react\";\nimport Scrape from \"./containers/Scrape/Scrape\";\nimport SelectCampaigns from \"./components/SelectCampaigns/SelectCampaigns\";\nimport SelectArticles from \"./components/SelectArticles/SelectArticles\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Typography from \"@mui/material/Typography\";\n// import axios from \"axios\";\n// import cheerio from \"cheerio\";\n// import useChimpArchive from \"./hooks/useChimpArchive\";\n\nconst App = () => {\n  // let [archive, setArchive] = useState([]);\n  // let [archive, scrape] = useChimpArchive([]);\n  let [archive, setArchive] = useState([]);\n  let [articles, setArticles] = useState([]);\n\n  const clearState = () => {\n    setArchive([])\n    setArticles([])\n  }\n\n  return (\n    <>\n      <AppBar sx={{ mb: 2 }} position=\"static\">\n        <Toolbar>\n          <Typography onClick={clearState} variant=\"h6\" sx={{ cursor: \"pointer\" }}>\n            ChimpPrint\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <div style={{ margin: \"0 2.5rem\" }}>\n        {archive.length ? (\n          articles.length ? (\n            <SelectArticles articles={articles} />\n          ) : (\n            <SelectCampaigns\n              campaigns={archive}\n              changeCampaigns={setArchive}\n              setArticles={setArticles}\n            />\n          )\n        ) : (\n          <Scrape onFormSubmit={setArchive} />\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nimport \"./index.css\"\n\nReactDOM.render(<App />, document.querySelector(\"#root\"));\n"],"sourceRoot":""}